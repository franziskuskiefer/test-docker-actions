name: main

on:
  push:

jobs:
  setup:
    runs-on: ${{ matrix.cfg.os }}
    strategy:
      fail-fast: false
      matrix:
        cfg:
          - { os: macos-latest, target: ["native", "aarch64-apple-ios", "aarch64-apple-darwin"], compiler: [{ cpp: g++-11, c: gcc-11 }, { cpp: clang++, c: clang }] }
          - { os: windows-latest }
          - { os: ubuntu-latest }
    steps:
      - name: 'Download artifact'
        uses: actions/github-script@v5
        with:
          script: |
            let allArtifacts = await github.rest.actions.listWorkflowRunArtifacts({
               owner: context.repo.owner,
               repo: context.repo.repo,
               run_id: context.payload.workflow_run.id,
            });
            let matchArtifact = allArtifacts.data.artifacts.filter((artifact) => {
              return artifact.name == "build"
            })[0];
            let download = await github.rest.actions.downloadArtifact({
               owner: context.repo.owner,
               repo: context.repo.repo,
               artifact_id: matchArtifact.id,
               archive_format: 'zip',
            });
            let fs = require('fs');
            fs.writeFileSync(`${process.env.GITHUB_WORKSPACE}/build.zip`, Buffer.from(download.data));

      - name: 'Unzip artifact'
        run: unzip build.zip

      - name: Test
        run: cat info.txt
